import cv2
import sys
import numpy as np
from matplotlib import pyplot as plt

image_path = sys.argv[1]
t = int(sys.argv[2])
c = int(sys.argv[3])
b = int(sys.argv[4])
img = cv2.imread(image_path,0)
# img = cv2.medianBlur(img,t)
ret,th1 = cv2.threshold(img,t,255,cv2.THRESH_BINARY)
# ret,th1 = cv2.threshold(img, t, 255, cv2.THRESH_BINARY)
th3 = cv2.adaptiveThreshold(img,255,cv2.ADAPTIVE_THRESH_GAUSSIAN_C,\
                    cv2.THRESH_BINARY,c,b)
titles = ['Original Image', 'Global Thresholding (v = 127)',
                    'Adaptive Mean Thresholding', 'Adaptive Gaussian Thresholding']
images = [img, th1, th3]

im2, contours, hierarchy = cv2.findContours(img,cv2.RETR_TREE,cv2.CHAIN_APPROX_SIMPLE)
print("len of contors %s" % len(contours))

cv2.drawContours(img, contours, -1, (0,255,0), 3)

cv2.namedWindow('image', cv2.WINDOW_NORMAL)
# for i in range(4):
cv2.imshow('image', img)
cv2.waitKey(0)
cv2.destroyAllWindows()
